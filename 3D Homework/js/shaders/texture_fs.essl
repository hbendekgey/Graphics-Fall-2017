Shader.source[document.currentScript.src.split('js/shaders/')[1]] = `
	precision highp float;

	// for applying the texture coloring
	varying vec2 texCoord; 
	uniform sampler2D colorTexture; 

	// for shading according to light source
	varying vec3 worldNormal;
	uniform vec4 lightPos[2];
	uniform vec3 lightPowerDensity[2];

	// We're not using this right now
	varying vec3 worldPos;

	void main(void) {
		vec4 color = texture2D(colorTexture, texCoord);
		vec4 apparentColor = vec4(0,0,0,0);
		for (int i = 0; i < 2; i++) {
			vec3 lightDir = lightPos[i].xyz - (worldPos * lightPos[i].w);
			float cos = dot(normalize(worldNormal), normalize(lightDir));
			vec3 M = lightPowerDensity[i] / dot(lightDir,lightDir);
			apparentColor = apparentColor + vec4(max(cos, 0.0) * color.xyz * M, 1);
		}
		gl_FragColor = apparentColor;

		// spotMainDir, set as same direction as lightDir, so it does nothing. 
		// Unless you want the spotlight thing to work, their you do
		// pow (dot(lightDir,spotMainDir), 5)
	}
`;